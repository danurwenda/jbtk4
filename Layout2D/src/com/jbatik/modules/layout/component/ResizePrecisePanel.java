/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jbatik.modules.layout.component;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.EventListenerList;

/**
 *
 * @author Dimas Y. Danurwenda
 */
public class ResizePrecisePanel extends javax.swing.JPanel {

    final SpinnerNumberModel wm;
    final SpinnerNumberModel hm;
    final SpinnerNumberModel pm;
    int oriW, oriH;
    int newW, newH;
    private int anchor;

    /**
     * Creates new form ResizeCanvasPanel
     */
    public ResizePrecisePanel(int w, int h) {
        initComponents();
        ((MyButtonGroup) anchorBG).addActionListener((ActionEvent e) -> {
            switch (e.getActionCommand()) {
                case "TL":
                    anchor = 1;
                    break;
                case "T":
                    anchor = 2;
                    break;
                case "TR":
                    anchor = 3;
                    break;
                case "L":
                    anchor = 4;
                    break;
                case "C":
                    anchor = 5;
                    break;
                case "R":
                    anchor = 6;
                    break;
                case "BL":
                    anchor = 7;
                    break;
                case "B":
                    anchor = 8;
                    break;
                case "BR":
                    anchor = 9;
                    break;
                default:
                    anchor = 0;
            }
        });
        oriW = w;
        oriH = h;
        oriSizeLabel.setText(w + " x " + h);
        wm = new SpinnerNumberModel(w, 1, 10000, 1);
        hm = new SpinnerNumberModel(h, 1, 10000, 1);
        pm = new SpinnerNumberModel(100, 1, 2000, 1);
        ws.setModel(wm);
        hs.setModel(hm);
        ps.setModel(pm);
    }

    public int getNewWidth() {
        return newW;
    }

    public int getNewHeight() {
        return newH;
    }

    public int getAnchor() {
        return anchor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sizeBG = new javax.swing.ButtonGroup();
        anchorBG = new MyButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        sizeRB = new javax.swing.JRadioButton();
        ws = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        psRB = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        oriSizeLabel = new javax.swing.JLabel();
        newSizeLabel = new javax.swing.JLabel();
        hs = new javax.swing.JSpinner();
        ps = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        tlAnchorTB = new javax.swing.JToggleButton();
        tAnchorTB = new javax.swing.JToggleButton();
        trAnchorTB = new javax.swing.JToggleButton();
        lAnchorTB = new javax.swing.JToggleButton();
        cAnchorTB = new javax.swing.JToggleButton();
        bAnchorTB = new javax.swing.JToggleButton();
        rAnchorTB = new javax.swing.JToggleButton();
        brAnchorTB = new javax.swing.JToggleButton();
        blAnchorTB = new javax.swing.JToggleButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.jLabel3.text")); // NOI18N

        sizeBG.add(sizeRB);
        sizeRB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(sizeRB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.sizeRB.text")); // NOI18N
        sizeRB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sizeRBItemStateChanged(evt);
            }
        });

        ws.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                wsStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.jLabel5.text")); // NOI18N

        sizeBG.add(psRB);
        org.openide.awt.Mnemonics.setLocalizedText(psRB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.psRB.text")); // NOI18N
        psRB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                psRBItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.jLabel8.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(oriSizeLabel, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.oriSizeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(newSizeLabel, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.newSizeLabel.text")); // NOI18N

        hs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hsStateChanged(evt);
            }
        });

        ps.setEnabled(false);
        ps.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                psStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.jLabel12.text")); // NOI18N

        anchorBG.add(tlAnchorTB);
        org.openide.awt.Mnemonics.setLocalizedText(tlAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.tlAnchorTB.text")); // NOI18N
        tlAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.tlAnchorTB.actionCommand")); // NOI18N
        tlAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        tlAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        tlAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        anchorBG.add(tAnchorTB);
        org.openide.awt.Mnemonics.setLocalizedText(tAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.tAnchorTB.text")); // NOI18N
        tAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.tAnchorTB.actionCommand")); // NOI18N
        tAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        tAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        tAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        anchorBG.add(trAnchorTB);
        org.openide.awt.Mnemonics.setLocalizedText(trAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.trAnchorTB.text")); // NOI18N
        trAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.trAnchorTB.actionCommand")); // NOI18N
        trAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        trAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        trAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        anchorBG.add(lAnchorTB);
        org.openide.awt.Mnemonics.setLocalizedText(lAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.lAnchorTB.text")); // NOI18N
        lAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.lAnchorTB.actionCommand")); // NOI18N
        lAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        lAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        lAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        anchorBG.add(cAnchorTB);
        cAnchorTB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(cAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.cAnchorTB.text")); // NOI18N
        cAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.cAnchorTB.actionCommand")); // NOI18N
        cAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        cAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        cAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        anchorBG.add(bAnchorTB);
        org.openide.awt.Mnemonics.setLocalizedText(bAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.bAnchorTB.text")); // NOI18N
        bAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.bAnchorTB.actionCommand")); // NOI18N
        bAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        bAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        bAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        anchorBG.add(rAnchorTB);
        org.openide.awt.Mnemonics.setLocalizedText(rAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.rAnchorTB.text")); // NOI18N
        rAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.rAnchorTB.actionCommand")); // NOI18N
        rAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        rAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        rAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        anchorBG.add(brAnchorTB);
        org.openide.awt.Mnemonics.setLocalizedText(brAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.brAnchorTB.text")); // NOI18N
        brAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.brAnchorTB.actionCommand")); // NOI18N
        brAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        brAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        brAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        anchorBG.add(blAnchorTB);
        org.openide.awt.Mnemonics.setLocalizedText(blAnchorTB, org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.blAnchorTB.text")); // NOI18N
        blAnchorTB.setActionCommand(org.openide.util.NbBundle.getMessage(ResizePrecisePanel.class, "ResizePrecisePanel.blAnchorTB.actionCommand")); // NOI18N
        blAnchorTB.setMaximumSize(new java.awt.Dimension(50, 50));
        blAnchorTB.setMinimumSize(new java.awt.Dimension(50, 50));
        blAnchorTB.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(oriSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ps, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel12))
                                .addComponent(psRB)
                                .addComponent(sizeRB)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ws, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(hs, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5))
                                .addComponent(jSeparator1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tlAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(trAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(blAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(brAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sizeRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ws, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(hs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(psRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tlAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bAnchorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(oriSizeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(newSizeLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sizeRBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sizeRBItemStateChanged
        boolean ena = (evt.getStateChange() == ItemEvent.SELECTED);
        ws.setEnabled(ena);
        hs.setEnabled(ena);
        if (ena) {
            newW = wm.getNumber().intValue();
            newH = hm.getNumber().intValue();
            updateSize();
        }
    }//GEN-LAST:event_sizeRBItemStateChanged

    private void psRBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_psRBItemStateChanged
        boolean ena = (evt.getStateChange() == ItemEvent.SELECTED);
        ps.setEnabled(ena);
        if (ena) {
            newW = oriW * pm.getNumber().intValue() / 100;
            newH = oriH * pm.getNumber().intValue() / 100;
            updateSize();
        }
    }//GEN-LAST:event_psRBItemStateChanged

    private void psStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_psStateChanged
        newW = oriW * pm.getNumber().intValue() / 100;
        newH = oriH * pm.getNumber().intValue() / 100;
        updateSize();
    }//GEN-LAST:event_psStateChanged

    private void wsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_wsStateChanged
        newW = wm.getNumber().intValue();
        hm.setValue(oriH * newW / oriW);
        newH = hm.getNumber().intValue();
        updateSize();
    }//GEN-LAST:event_wsStateChanged

    private void hsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hsStateChanged
        newH = hm.getNumber().intValue();
        wm.setValue(oriW * newH / oriH);
        newW = wm.getNumber().intValue();
        updateSize();
    }//GEN-LAST:event_hsStateChanged
    private void updateSize() {
        newSizeLabel.setText(newW + " x " + newH);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup anchorBG;
    private javax.swing.JToggleButton bAnchorTB;
    private javax.swing.JToggleButton blAnchorTB;
    private javax.swing.JToggleButton brAnchorTB;
    private javax.swing.JToggleButton cAnchorTB;
    private javax.swing.JSpinner hs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton lAnchorTB;
    private javax.swing.JLabel newSizeLabel;
    private javax.swing.JLabel oriSizeLabel;
    private javax.swing.JSpinner ps;
    private javax.swing.JRadioButton psRB;
    private javax.swing.JToggleButton rAnchorTB;
    private javax.swing.ButtonGroup sizeBG;
    private javax.swing.JRadioButton sizeRB;
    private javax.swing.JToggleButton tAnchorTB;
    private javax.swing.JToggleButton tlAnchorTB;
    private javax.swing.JToggleButton trAnchorTB;
    private javax.swing.JSpinner ws;
    // End of variables declaration//GEN-END:variables
@SuppressWarnings("serial")
    private class MyButtonGroup extends ButtonGroup {

        private final ActionListener btnGrpListener = new BtnGrpListener();
        private final EventListenerList listenerList = new EventListenerList();

        @Override
        public void add(AbstractButton b) {
            b.addActionListener(btnGrpListener);
            super.add(b);
        }

        public void addActionListener(ActionListener listener) {
            listenerList.add(ActionListener.class, listener);
        }

        public void removeActionListener(ActionListener listener) {
            listenerList.remove(ActionListener.class, listener);
        }

        protected void fireActionListeners() {
            Object[] listeners = listenerList.getListenerList();
            String actionCommand = "";
            ButtonModel model = getSelection();
            if (model != null) {
                actionCommand = model.getActionCommand();
            }
            ActionEvent ae = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, actionCommand);
            for (int i = listeners.length - 2; i >= 0; i -= 2) {
                if (listeners[i] == ActionListener.class) {
                    ((ActionListener) listeners[i + 1]).actionPerformed(ae);
                }
            }
        }

        private class BtnGrpListener implements ActionListener {

            @Override
            public void actionPerformed(ActionEvent ae) {
                fireActionListeners();
            }
        }
    }
}
